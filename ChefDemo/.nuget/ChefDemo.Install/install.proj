<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="All">
  <UsingTask TaskName="MSBuild.ExtensionPack.Web.Iis7Website" AssemblyFile="$(MSBuildProjectDirectory)\MSBuild.ExtensionPack.Iis7.dll" />
  <UsingTask TaskName="MSBuild.ExtensionPack.Web.Iis7AppPool" AssemblyFile="$(MSBuildProjectDirectory)\MSBuild.ExtensionPack.Iis7.dll" />
  <UsingTask TaskName="MSBuild.ExtensionPack.Web.Iis7Application" AssemblyFile="$(MSBuildProjectDirectory)\MSBuild.ExtensionPack.Iis7.dll" />
  <UsingTask TaskName="MSBuild.ExtensionPack.FileSystem.File" AssemblyFile="$(MSBuildProjectDirectory)\MSBuild.ExtensionPack.dll" />
  <UsingTask TaskName="MSBuild.ExtensionPack.FileSystem.Folder" AssemblyFile="$(MSBuildProjectDirectory)\MSBuild.ExtensionPack.dll" />

  <PropertyGroup>
    <DynamicAppPoolName Condition="$(DynamicAppPoolName) == ''">ChefDemoAppPool</DynamicAppPoolName>
    <WebsiteName>Dynamic</WebsiteName>
    <ChefDemoVDirName>chefdemo</ChefDemoVDirName>
    <ChefDemoDirPath>$(SystemDrive)\inetpub\wwwroot\chefdemo</ChefDemoDirPath>
    <ChefDemoAppDirPath>$(TargetDirectory_Dynamic)</ChefDemoAppDirPath>
    <AppCmdExe>$(IISBin)\APPCMD.EXE</AppCmdExe>
    <PackageRootDirPath>$(MSBuildProjectDirectory)\..</PackageRootDirPath>

  </PropertyGroup>

  <Target Name="All">
    <CallTarget Targets="Dynamic" />
  </Target>

  <Target Name="Dynamic">
    <Error Condition="$(TargetDirectory_Dynamic) == ''" Code="1" Text="Target 'Dynamic' requires variable TargetDirectory_Dynamic to be set." />
    <Error Condition="$(DynamicAppPoolName) == ''" Code="1" Text="Target 'Dynamic' requires variable DynamicAppPoolName to be set." />

    <CallTarget Targets="PreInstall" />
    <CallTarget Targets="Clean" />

    <CallTarget Targets="CreateAppPools" />
    <CallTarget Targets="ConfigureAppPool" />

    <Message Text="Copying files to '$(TargetDirectory_Dynamic)'" />
    <ItemGroup>
      <BinFiles Include="$(PackageRootDirPath)\content\bin\**\*.*" />
      <Views Include="$(PackageRootDirPath)\content\views\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(BinFiles)" OverwriteReadOnlyFiles="True" DestinationFolder="$(TargetDirectory_Dynamic)\Bin\%(BinFiles.RecursiveDir)" />
    <Copy SourceFiles="@(Views)" OverwriteReadOnlyFiles="True" DestinationFolder="$(TargetDirectory_Dynamic)\Views\%(Views.RecursiveDir)" />

    <CallTarget Targets="PostInstall" />
  </Target>

  <Target Name="Clean">
    <MSBuild.ExtensionPack.FileSystem.Folder TaskAction="RemoveContent" Path="$(TargetDirectory_Dynamic)" Condition="Exists($(TargetDirectory_Dynamic))" />
  </Target>

  <Target Name="CreateAppPools">
    <!-- Check for app pools in IIS from previous install -->
    <MSBuild.ExtensionPack.Web.Iis7AppPool TaskAction="CheckExists" Name="$(DynamicAppPoolName)">
      <Output TaskParameter="Exists" PropertyName="DynamicAppPoolExists" />
    </MSBuild.ExtensionPack.Web.Iis7AppPool>
    <Message Text="Dynamic App Pool Exists: $(DynamicAppPoolExists)" />

    <!-- Create app pools if they do not exist -->
    <MSBuild.ExtensionPack.Web.Iis7AppPool TaskAction="Create" Name="$(DynamicAppPoolName)" ManagedRuntimeVersion="v4.0" Condition="'$(DynamicAppPoolExists)' == 'False'" />
  </Target>

  <Target Name="ConfigureAppPool">
    <Message Text="Configuring $(DynamicAppPoolName)" />
    <Error Condition="$(AppPoolIdentity) == ''" Code="1" Text="Target 'ChefDemo' requires variable AppPoolIdentity to be set." />
    <Error Condition="$(AppPoolIdentityPassword) == ''" Code="1" Text="Target 'ChefDemo' requires variable AppPoolIdentityPassword to be set." />
    <MSBuild.ExtensionPack.Web.Iis7AppPool TaskAction="Modify" Name="$(DynamicAppPoolName)" ManagedRuntimeVersion="v4.0" Enable32BitAppOnWin64="false" IdleTimeout="0" RecycleInterval="0" />
    <MSBuild.ExtensionPack.Web.Iis7AppPool TaskAction="SetPipelineMode" Name="$(DynamicAppPoolName)" PipelineMode="Integrated" />
    <MSBuild.ExtensionPack.Web.Iis7AppPool TaskAction="SetIdentity" Name="$(DynamicAppPoolName)" IdentityType="SpecificUser" PoolIdentity="$(AppPoolIdentity)" IdentityPassword="$(AppPoolIdentityPassword)" />

    <Exec Command="$(AppCmdExe) set apppool &quot;$(DynamicAppPoolName)&quot; /-managedPipelineMode /-managedRuntimeVersion /-enable32BitAppOnWin64 /-processModel.idleTimeout /-failure.rapidFailProtection /-recycling.logEventOnRecycle /-recycling.periodicRestart.time /-recycling.periodicRestart.schedule" />
    <Exec Command="$(AppCmdExe) set apppool &quot;$(DynamicAppPoolName)&quot; /managedPipelineMode:Integrated /managedRuntimeVersion:v4.0 /enable32BitAppOnWin64:False /processModel.idleTimeout:&quot;00:00:00&quot; /failure.rapidFailProtection:False /recycling.logEventOnRecycle:ConfigChange,IsapiUnhealthy,Memory,OnDemand,PrivateMemory,Requests,Schedule,Time /recycling.periodicRestart.time:&quot;00:00:00&quot; /+recycling.periodicRestart.schedule.[value='08:15:00']" />
  </Target>

  <Target Name="PreInstall">
    <Exec Command="IISRESET /STOP" />
  </Target>

  <Target Name="PostInstall">
    <Exec Command="IISRESET /START" />
  </Target>
</Project>